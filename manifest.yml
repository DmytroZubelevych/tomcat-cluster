type: update                                                                                                                                                                                                                    
version: 1.6.1                                                                                                                                                                                                                  
id: tomcat-cluster                                                                                                                                                                                                              
baseUrl: https://raw.githubusercontent.com/SiryjVyiko/tomcat-cluster/master                                                                                                                                            
description:                                                                                                                                                                                                                     
  short: Tomcat Cluster Logic (Beta)                                                                                                                                                                                                                                 
name: Tomcat Cluster Logic

targetNodes: none

nodeGroupAlias: cp

globals:
  serverConfig: /opt/tomcat/conf/server.xml
                                                                                                                                                                              
onInstall:
  - installXmlUtility
  - removeClusterConfig
  - applyClusterTemplate: ${nodes.cp.join(id,)}
  - addConfigToRedeployConf: ${nodes.cp.join(id,)}
  - applyHostName
  - addNodes
  - addClusteringFirewallRule: ${nodes.cp.join(id,)}
  - cmd[cp]: jem service restart
            
onBeforeScaleIn[cp]:
  - forEach (event.response.nodes):
    - cmd[cp]: jcm removeNode ${@i.intIP}
    
onAfterScaleIn[cp]:
  - cmd[cp]: jem service restart

onAfterScaleOut[cp]:
  - installXmlUtility: ${event.response.nodes.join(id,)}
  - applyClusterTemplate: ${event.response.nodes.join(id,)}
  - addConfigToRedeployConf: ${nodes.cp.join(id,)}
  - applyHostName
  - addNodes
  - cmd[cp]: jem service restart
            
onAfterClone:
  - script: delete MANIFEST.id; return {result:0, jps:MANIFEST};
  - install: ${response.jps}
    envName: ${event.response.env.envName}

onUninstall:
  - removeClusterConfig
  
onAfterMigrate:
  - cleanupNodes
  - addNodes
  - cmd[cp]: jem service restart
  
onAfterRedeployContainer[cp]:
  - installXmlUtility
  - checkClusterConfig
  - addNodes
  - cmd[cp]: jem service restart
  
actions:
  addClusteringFirewallRule:
    script: |
        var envName = "${env.name}", nodeGroup="cp";
        var inputRule = {"direction":"INPUT","name":"Clustering","protocol":"ALL","ports":4004,"src":"ALL","priority":1200,"action":"ALLOW"};
        var outputRule = {"direction":"OUTPUT","name":"Clustering","protocol":"ALL","ports":4004,"dst":"ALL","priority":1300,"action":"ALLOW"};
        if (jelastic.environment.security) {
          resp = jelastic.billing.account.GetOwnerQuotas(appid, session, 'firewall.enabled');
          if (!resp || resp.result !== 0) return resp;
          bFireWallEnabled = resp.array[0] ? resp.array[0].value : 0;
          if (bFireWallEnabled) {
            resp = jelastic.environment.security.AddRule(envName, session, inputRule, nodeGroup);
            if (!resp || resp.result !== 0) return resp;
            return jelastic.environment.security.AddRule(envName, session, outputRule, nodeGroup);
          }
        }

  installXmlUtility:
    - cmd[cp]: wget '${baseUrl}/jcm' -O /usr/local/sbin/jcm; chmod +x /usr/local/sbin/jcm; yum -y install xmlstarlet;
      user: root
    
  applyClusterTemplate:
    - cmd[${this}]:  jcm applyClusterTemplate ${baseUrl}
      user: root
    
  removeClusterConfig:
    - cmd[cp]: jcm removeClusterConfig

  checkClusterConfig:
    - cmd[cp]: jcm checkClusterConfig ${baseUrl}
    
  cleanupNodes:
    - cmd[cp]: jcm cleanupNodes
  
  applyHostName:
    - forEach(nodes.cp):
      - cmd[${@i.id}]: jcm applyHostIpInConfig
        user: root
      
  addNodes:
    - forEach(nodes.cp):
      - cmd[cp]: jcm addNode ${@i.intIP} ${@i.id}
        user: root
        
  addConfigToRedeployConf:
    - cmd[${this}]:  jcm addConfigToRedeployConf
      user: root
